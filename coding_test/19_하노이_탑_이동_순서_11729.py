# # https://www.acmicpc.net/problem/11729

import sys

sys.stdin = open('./txt/problem_19.txt', 'rt')

N = int(input())


# n : 갯수 a:~에서 b:거쳐서 c:~로
def hanoi(n, a, b, c):
    if n == 1:
        print(a, c)
    else:
        hanoi(n - 1, a, c, b)
        print(a, c)
        hanoi(n - 1, b, a, c)


print(2 ** N - 1)
hanoi(N,1,2,3)

''' 예제
321 ->  ->
'''

''' 문제 이해
1. 하노이의 탑의 경우 N=3 정도는 머리속으로 일련의 과정을 생각할 수 있었음
2. 실제 하노이의 탑을 해보고 규칙을 찾을 예정
3.  규칙을 찾아보자 ㅠㅠ
4. N , N-1의 관계 -> 즉, 점화식의 관계로 이해하려고 노력해야 함
                    1) N-1을 다른기둥으로 옮기고
                    2) 남은 한개를 마지막 기둥에 옮기고
                    3) 다시 N-1 기둥을 마지막 기둥으로 옮겨야함 1)과 경우의 수가 동일함
'''
'''
5432 ->  -> 1  13         = 둘 중 비어 있다면 아무곳이나 이동 가능
543 -> 2 -> 1  12         = 적어도 빈곳이 잇다면 그곳으로 이동
543 -> 21 ->            = 3곳 중 가장 작은 원소를 그다음 작은 곳으로 이동
54 -> 21 -> 3           = 빈곳이 있었고 3이 빈곳으로 이동
541 -> 2 -> 3           = 
541 ->  -> 32
54 ->  -> 321
5 -> 4 -> 321
5 -> 41 -> 32
52 -> 41 -> 3
521 -> 4 -> 3
521 -> 43 -> 
52 -> 43 -> 1 
5 -> 432 -> 1 
5 -> 4321 ->  
 -> 4321 -> 5 
1 -> 432 -> 5
1 -> 43 -> 52
 -> 43 -> 521
3 -> 4 -> 521
3 -> 41 -> 52
32 -> 41 -> 5
321 -> 4 -> 5
321 ->  -> 54
32 ->  -> 541
3 -> 2 -> 541
3 -> 21 -> 54
 -> 21 -> 543
1 -> 2 -> 543
1 ->  -> 5432
 ->  -> 54321
'''
